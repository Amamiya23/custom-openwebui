name: Build and Push Custom OpenWebUI Docker Image

# 触发器：当推送 'v*.*.*' 格式的标签时触发
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境
    permissions:
      contents: read      # 需要读取仓库内容
      packages: write     # 需要写入 Docker 镜像

    steps:
      # 1. 检出你的代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 从 Git 标签中提取版本号 (去掉 'v' 前缀)
      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      # 3. 设置 QEMU (推荐，用于潜在的多平台构建支持)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 4. 设置 Docker Buildx (推荐，使用新一代构建器)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5. 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. 构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .                 # Docker 构建上下文 (Dockerfile 所在目录)
          file: ./Dockerfile         # Dockerfile 的路径
          push: true                 # 构建完成后推送到仓库
          pull: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO || 'study' }}:custom-openwebui-${{ steps.extract_version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64